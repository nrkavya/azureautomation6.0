name: Build and Deploy

on: [push]

env:
  AZURE_AKS_CLUSTER: toolsakscluster
  AKS_RESOURCE_GROUP: azure-automation-rg
  ACR_RESOURCE_URI: azuretoolsacr.azurecr.io
  AZURE_CONTAINER_REGISTRY: azuretoolsacr
  PROJECT_NAME: Azure Automation
  ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

jobs:
  build:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: tye deploy
    runs-on: ubuntu-latest
    steps:
    - name: ‚úî Checkout
      uses: actions/checkout@v2

    - name: üß∞ Setup .NET Core
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: '3.1.x'

    - name: üõ† Install Tye tools
      run: |
        dotnet tool install -g Microsoft.Tye --version "0.4.0-alpha.20371.1"
    - name: üîê Login to ACR
      uses: Azure/docker-login@v1  
      with:  
        login-server: ${{ env.ACR_RESOURCE_URI }}
        username: ${{ secrets.ACR_USER }}  
        password: ${{ secrets.ACR_PASSWORD }}

    - name: üìÉ Set AKS context
      uses: azure/K8S-set-context@v1
      with:
       method: kubeconfig
       kubeconfig: ${{ secrets.KUBE_CONFIG }}
      
#     - name: üìÉ Set AKS context
#       uses: azure/aks-set-context@v1
#       with:
#         creds: '${{ secrets.AZURE_CREDENTIALS }}'
#         cluster-name: ${{ env.AZURE_AKS_CLUSTER }}
#         resource-group: ${{ env.AKS_RESOURCE_GROUP }}
        
#     - uses: azure/actions/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}
    
#     - uses: azure/aks-set-context@v2.0
#       with:
#          resource-group:  ${{ env.AKS_RESOURCE_GROUP }}
#          cluster-name: ${{ env.AZURE_AKS_CLUSTER }}
     
      
#     - name: üåê kubectl apply
#       run: |
#         kubectl apply -f acr-nginx.yaml 

     
    - name: ‚ò∏ tye deploy
      run: |
        tye deploy --interactive
